import React from 'react'

import { render, screen, fireEvent } from '@testing-library/react'

import Footer from './'
import { ThemeProvider } from '../../utils/context'

// M√™me si nous voulons tester Footer ici, il utilise le Contexte pour acc√©der √†
// toggleTheme,pour cette raison on l'englobe avec le Provider

describe('Footer', () => {
    test('Should render without crashing', async () => {
        render(
            <ThemeProvider>
                <Footer />
            </ThemeProvider>
        )
    })
    test('Change theme', async () => {
        render(
            <ThemeProvider>
                <Footer />
            </ThemeProvider>
        )
        const nightModeButton = screen.getByRole('button')
        expect(nightModeButton.textContent).toBe('Changer de mode : ‚òÄÔ∏è')
        fireEvent.click(nightModeButton)
        expect(nightModeButton.textContent).toBe('Changer de mode : üåô')
    })
})

/* 
Ici, nous avons utilis√© le s√©lecteur getByRole  . 
Ce s√©lecteur peut dans beaucoup de cas vous permettre 
d'acc√©der √† votre √©l√©ment, d'autant que vous pouvez lui passer 
un param√®tre pour cibler encore plus pr√©cis√©ment un √©l√©ment. 
Mais dans le cas o√π vous ne pouvez pas l'utiliser, et o√π aucun autre 
s√©lecteur ne vous permet de cibler votre √©l√©ment, vous pouvez tout √† fait 
passer data-testid  √† votre composant et ensuite y acc√©der avec le s√©lecteur
 getByTestId  : https://testing-library.com/docs/queries/bytestid
*/
